Alien declaration below toplevel
if (true) { alien javascript foo : () ~> () = "foobar"; foo() } else { () }
stderr : @.*
exit : 1

Alien blocks below toplevel
if (true) { alien javascript { foo : () ~> () = "foobar"; } foo() } else { () }
stderr : @.*
exit : 1

Alien functions may be evaluated in the interpreter
alien javascript f : () ~> () = "g"; id(f)
stdout : fun : () ~> ()

Alien values may not be evaluated in the interpreter
alien javascript x : () = "x"; id(x)
stderr : @.* Runtime error: alien ground values are unsupported.
exit : 1

JavaScript FFI entities are implicitly placed on the client
alien javascript f : () ~> () = "f"; f()
exit : 1
stderr : @.*Error: Cannot call client side function 'f' outside of web mode

Alien binders can contain primes
alien javascript f' : () -> () = "";
stdout : () : ()

Alien type variables can contain primes
alien javascript f : (a', b') -> c' = "";
stdout : () : ()

Alien operator
alien javascript ++ : (a, a) -> a = "concat";
stdout : () : ()

Client side alien
alien javascript unsafeCoerce client : (a) -> b = "unsafe_coerce";
stdout : () : ()

Server side alien
alien javascript unsafeCoerce server : (a) -> b = "unsafe_coerce";
stdout : () : ()