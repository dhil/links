# N-Body benchmark

typename Planet = (x : Float, y : Float, z : Float, # Cartesian coordinates
                   vx: Float, vy: Float, vz: Float, # Velocity
                   mass : Float);
#typename BodyPair = (bi:Body, bj:Body);
# Constants
var pi = 3.141592653589793;
var solarmass = 4.0 *. pi *. pi;
var daysPerYear = 365.24;

# N-body system
sig makeBody : (Float, Float, Float, Float, Float, Float, Float) -> Planet
fun makeBody(x, y, z, vx, vy, vz, mass) {
  (x=x, y=y, z=z,
   vx = vx *. daysPerYear,
   vy = vy *. daysPerYear,
   vz = vz *. daysPerYear,
   mass = mass *. solarmass)
}

sig updateBody : (Planet, Float, Float, Float) -> Planet
fun updateBody(body, vx, vy, vz) {
  (body with vx = vx, vy = vy, vz = vz)
}

fun advance(bodies, dt) {
  var n = arrayLength(bodies);

  iterate(fun(i) {
    var bi = arrayGet(bodies, i);
    iterate(fun(j) {
      var bj = arrayGet(bodies, j);
      var dx = bi.x -. bj.x;
      var dy = bi.y -. bj.y;
      var dz = bi.z -. bj.z;

      var dist2 = (dx *. dx) +. (dy *. dy) +. (dz *. dz);
      var mag = dt /. (dist2 *. sqrt(dist2));

      var bi = updateBody(bi, bi.vx -. (dx *. bj.mass *. mag),
                              bi.vy -. (dy *. bj.mass *. mag),
                              bi.vz -. (dz *. bj.mass *. mag));
      arraySet(bodies, i, bi);

      var bj = updateBody(bj, bj.vx +. (dx *. bi.mass *. mag),
                              bj.vy +. (dy *. bi.mass *. mag),
                              bj.vz +. (dz *. bi.mass *. mag));
      arraySet(bodies, j, bj)
    }, i+1, n)
  }, 0, n);

  iterate(fun(i) {
    var bi = arrayGet(bodies, i);
    var bi = (bi with x = bi.x +. (dt *. bi.vx),
                      y = bi.y +. (dt *. bi.vy),
                      z = bi.z +. (dt *. bi.vz));
    arraySet(bodies, i, bi)
  }, 0, n)
}

fun energy(bodies) {
  var n = arrayLength(bodies);
  var e = ref(0.0);
  iterate(fun(i) {
    var bi = arrayGet(bodies, i);
    e := deref(e) +. ((0.5 *. bi.mass) *. ((bi.vx *. bi.vx) +. (bi.vy *. bi.vy) +. (bi.vz *. bi.vz)));
    iterate(fun(j) {
      var bj = arrayGet(bodies, j);
      var dx = bi.x -. bj.x;
      var dy = bi.y -. bj.y;
      var dz = bi.z -. bj.z;
      var distance = sqrt((dx *. dx) +. (dy *. dy) +. (dz *. dz));
      e := deref(e) -. ((bi.mass *. bj.mass) /. distance);
    }, i+1, n)
  }, 0, n);
  deref(e)
}


fun offsetMomentum(bodies) {
  var px = ref(0.0);
  var py = ref(0.0);
  var pz = ref(0.0);

  iterate(fun(i) {
    var bi = arrayGet(bodies, i);
    px := deref(px) +. bi.vx *. bi.mass;
    py := deref(py) +. bi.vy *. bi.mass;
    pz := deref(pz) +. bi.vz *. bi.mass;
  }, 0, arrayLength(bodies));

  var sun = (arrayGet(bodies, 0) with vx = (-.deref(px)) /. solarmass,
                                      vy = (-.deref(py)) /. solarmass,
                                      vz = (-.deref(pz)) /. solarmass);
  arraySet(bodies, 0, sun)
}


var jupiter = ( x = 4.84143144246472090e0,
                y = -.1.16032004402742839e0,
                z = -.1.03622044471123109e-1,
                vx = 1.66007664274403694e-3 *. daysPerYear,
                vy = 7.69901118419740425e-3 *. daysPerYear,
                vz = -.6.90460016972063023e-5 *. daysPerYear,
                mass = 9.54791938424326609e-4 *. solarmass    );

var saturn = ( x = 8.34336671824457987e0,
               y = 4.12479856412430479e0,
               z = -.4.03523417114321381e-1,
               vx = -.2.76742510726862411e-3 *. daysPerYear,
               vy = 4.99852801234917238e-3 *. daysPerYear,
               vz = 2.30417297573763929e-5 *. daysPerYear,
               mass = 2.85885980666130812e-4 *. solarmass     );

var uranus = ( x = 1.28943695621391310e1,
               y = -.1.51111514016986312e1,
               z = -.2.23307578892655734e-1,
               vx = 2.96460137564761618e-3 *. daysPerYear,
               vy = 2.37847173959480950e-3 *. daysPerYear,
               vz = -.2.96589568540237556e-5 *. daysPerYear,
               mass = 4.36624404335156298e-5 *. solarmass     );

var neptune = ( x = 1.53796971148509165e1,
                y = -.2.59193146099879641e1,
                z = 1.79258772950371181e-1,
                vx = 2.68067772490389322e-3 *. daysPerYear,
                vy = 1.62824170038242295e-3 *. daysPerYear,
                vz = -.9.51592254519715870e-5 *. daysPerYear,
                mass = 5.15138902046611451e-5 *. solarmass   );

var sun = ( x = 0.0,  y = 0.0,  z = 0.0,  vx = 0.0,  vy = 0.0, vz = 0.0,
            mass = solarmass );

sig bodies : Array(Planet)
var bodies = {
   var a = makeArray(5, sun);
   arraySet(a, 1, jupiter);
   arraySet(a, 2, saturn);
   arraySet(a, 3, uranus);
   arraySet(a, 4, neptune);
   a
};

fun main() {
  var n = 10000; #50000000;
  offsetMomentum(bodies);
  print(floatToString(energy(bodies)));
  iterate(fun(i) {
    advance(bodies, 0.01);
  }, 0, n);
  print(floatToString(energy(bodies)))
}

main()
